
-- https://gist.github.com/JamesSaxon/7bd0f46c35a6b8eca864756419eec30d
-- https://trac.osgeo.org/postgis/wiki/UsersWikiSimplifyWithTopologyExt
-- https://strk.kbt.io/blog/2012/04/13/simplifying-a-map-layer-using-postgis-topology/
-- https://trac.osgeo.org/postgis/wiki/UsersWikiSimplifyPreserveTopology

--SELECT * FROM pg_available_extensions;
--CREATE EXTENSION postgis_topology ;

--SELECT * FROM pg_available_extensions;
--CREATE EXTENSION postgis_topology ;


-- Create the topo_qc schema
select DropTopology('topo_qc');
select CreateTopology('topo_qc', 3347, 0);

-- Populate the edge, node, face and relation tables in topo_qc based on a (buffered) public.qc_city_test_tbl geom
select ST_CreateTopoGeo('topo_qc',ST_Collect(st_buffer(st_transform("GEOMETRY", 3347),1)))
from public.qc_city_test_tbl;

-- Create a topological geometry in the original public.qc_city_test_tbl
select AddTopoGeometryColumn('topo_qc', 'public', 'qc_city_test_tbl', 'topogeom', 'MULTIPOLYGON');

-- Populate the topo geometry
UPDATE public.qc_city_test_tbl 
SET topogeom = toTopoGeom(st_transform("GEOMETRY", 3347), 'topo_qc', 1);

-- Function for edge simplification with topological constraints
-- https://gist.github.com/JamesSaxon/7bd0f46c35a6b8eca864756419eec30d
CREATE OR REPLACE FUNCTION SimplifyEdgeGeom(atopo varchar, anedge int, maxtolerance float8)
RETURNS float8 AS $$
DECLARE
  tol float8;
  sql varchar;
BEGIN
  tol := maxtolerance;
  LOOP
    sql := 'SELECT topology.ST_ChangeEdgeGeom(' || quote_literal(atopo) || ', ' || anedge
      || ', ST_Simplify(geom, ' || tol || ')) FROM '
      || quote_ident(atopo) || '.edge WHERE edge_id = ' || anedge;
    BEGIN
      -- RAISE NOTICE 'Running %', sql;
      EXECUTE sql;
      RETURN tol;
    EXCEPTION
     WHEN OTHERS THEN
      RAISE WARNING 'Simplification of edge % with tolerance % failed: %', anedge, tol, SQLERRM;
      tol := round( (tol/2.0) * 1e8 ) / 1e8; -- round to get to zero quicker
      IF tol = 0 THEN 
        RAISE NOTICE 'Tolerance reached 0.  Exception: %', SQLERRM; 
        RETURN 0;
      END IF;
    END;
  END LOOP;
END
$$ LANGUAGE 'plpgsql' STABLE STRICT;


-- Call the custom simplification function with the edge data
SELECT SimplifyEdgeGeom('topo_qc', edge_id, 500) 
FROM topo_qc.edge_data;


-- Create a new column with the simplified geometry
ALTER TABLE public.qc_city_test_tbl ADD geomsimp GEOMETRY;

-- Populate the new column
UPDATE public.qc_city_test_tbl 
SET geomsimp = topogeom::geometry;